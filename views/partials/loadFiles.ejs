<script>
    function loadFiles(
        styles, // array of css urls to load
        scripts, // array of js urls to load
        images, // array of image urls to load
        step, // (status) => {} called every time a file is loaded with info about status
        // see status = () => {} for the contents of (status)
        finish // () => {} called when all files are loaded (can be undefined)
    ) {
        let loadedScripts = []; // populated as scripts are loaded
        let loadedStyles = []; // populated as styles are loaded
        let loadedImages = []; // populated as images are loaded

        // load css styles
        for (let i = 0; i < styles.length; i++) {
            const url = styles[i];

            // create the link element
            let style = document.createElement("link");
            style.setAttribute("rel", "stylesheet");
            style.href = url;

            // add onload listener so we know when the style has been loaded
            style.onload = () => {
                loadedStyles.push(url);

                // call step() with the status (status is null if finish() should be called)
                step(status());
            };
            // add the link element to the end of the document head
            document.head.appendChild(style);
        }

        // load js scripts
        for (let i = 0; i < scripts.length; i++) {
            const url = scripts[i];

            // create the script element
            let script = document.createElement("script");
            script.src = url;

            // add onload listener so we know when the script has been loaded
            script.onload = () => {
                loadedScripts.push(url);

                // call step() with the status (status is null if finish() should be called)
                step(status());
            };
            // add the script element to the end of the document body
            document.body.appendChild(script);
        }

        // load images
        let hiddenImages = document.createElement("div");
        hiddenImages.style.display = "none";
        for (let i = 0; i < images.length; i++) {
            const url = images[i];

            let image = document.createElement("img");
            image.onload = () => {
                loadedImages.push(url);
                step(status());
            };
            image.src = url;
            hiddenImages.appendChild(image);
        }
        document.body.appendChild(hiddenImages);

        // gets the current status of the loading
        let status = () => {
            let loaded = [loadedScripts, loadedStyles].flat();
            let total = [scripts, styles].flat();

            // on the last file loaded, call finish() - unless undefined
            if (loaded.length == total.length && finish != undefined) {
                finish();
                return null;
            }

            // status structure
            return {
                scripts: {
                    loaded: loadedScripts,
                    total: scripts
                },
                styles: {
                    loaded: loadedStyles,
                    total: styles
                },
                loaded: loaded,
                total: total
            };
        };
    }
</script>
